package vista;

import daos.DaoCategoria;
import daos.DaoProducto;
import java.awt.Dimension;
import java.awt.HeadlessException;
import javax.swing.JOptionPane;

/**
 *
 * @author barre
 */
public class Producto extends javax.swing.JInternalFrame {

    int obtenerIdCategoriaCombo = 0;
    int categoria = 0;
    int idProdu = 0;

    public Producto(modelos.Producto pro) {
        initComponents();
        this.setSize(new Dimension(400, 400));
        this.setTitle("Nuevo Producto");

        DaoCategoria daoCat = new DaoCategoria();
        jComboBox_categoria = daoCat.CargarComboCategorias(jComboBox_categoria);
        btnActualizar.setVisible(false);
        if (pro != null) {
            DaoCategoria daoC=new DaoCategoria();
            txt_Codigo.setText("" + pro.getCodigo());
            txt_Codigo.setEditable(false);
            txt_nombre.setText(pro.getNombre());
            txt_cantidad.setText("" + pro.getCantidad());
            txt_descripcion.setText(pro.getDescripcion());
            txt_precio.setText("" + pro.getPrecio());
            jComboBox_categoria.setSelectedItem(daoC.buscarDescripcionCategoria(pro.getIdCategoria()));
            jButton_Guardar.setVisible(false);
            btnActualizar.setVisible(true);
            idProdu = pro.getIdProducto();
            txtStock.setText(""+pro.getMinimo());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btn_eliminar = new javax.swing.JButton();
        txt_Codigo = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        btnActualizar = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        txtStock = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txt_nombre = new javax.swing.JTextField();
        txt_cantidad = new javax.swing.JTextField();
        txt_precio = new javax.swing.JTextField();
        txt_descripcion = new javax.swing.JTextField();
        jComboBox_categoria = new javax.swing.JComboBox<>();
        jButton_Guardar = new javax.swing.JButton();
        jLabel_wallpaper = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btn_eliminar.setText("Eliminar");
        btn_eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_eliminarActionPerformed(evt);
            }
        });
        getContentPane().add(btn_eliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 320, -1, -1));
        getContentPane().add(txt_Codigo, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 30, 170, 30));

        jLabel8.setFont(new java.awt.Font("Segoe UI Variable", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Código:");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 40, -1, -1));

        jLabel1.setFont(new java.awt.Font("Segoe UI Variable", 1, 20)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Nuevo Producto");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 0, -1, 20));

        btnActualizar.setFont(new java.awt.Font("Segoe UI Variable", 0, 14)); // NOI18N
        btnActualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/actualizar.png"))); // NOI18N
        btnActualizar.setText("Actualizar");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });
        getContentPane().add(btnActualizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 320, -1, 30));

        jLabel6.setFont(new java.awt.Font("Segoe UI Variable", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Stock Minimo:");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 160, 100, -1));
        getContentPane().add(txtStock, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 150, 170, 30));

        jLabel2.setFont(new java.awt.Font("Segoe UI Variable", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Nombre:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 80, 60, 20));

        jLabel3.setFont(new java.awt.Font("Segoe UI Variable", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Cantidad:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 120, 70, -1));

        jLabel4.setFont(new java.awt.Font("Segoe UI Variable", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Precio:");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 200, 50, 20));

        jLabel5.setFont(new java.awt.Font("Segoe UI Variable", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("Descripcion:");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 240, 90, -1));

        jLabel7.setFont(new java.awt.Font("Segoe UI Variable", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("Categorias:");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 280, 80, 20));

        txt_nombre.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        getContentPane().add(txt_nombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 70, 170, 30));

        txt_cantidad.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        getContentPane().add(txt_cantidad, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 110, 170, 30));

        txt_precio.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        getContentPane().add(txt_precio, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 190, 170, 30));

        txt_descripcion.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txt_descripcion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_descripcionActionPerformed(evt);
            }
        });
        getContentPane().add(txt_descripcion, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 230, 170, 30));

        jComboBox_categoria.setFont(new java.awt.Font("Segoe UI Variable", 0, 14)); // NOI18N
        jComboBox_categoria.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione categoría:", "Item 2", "Item 3", "Item 4" }));
        jComboBox_categoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox_categoriaActionPerformed(evt);
            }
        });
        getContentPane().add(jComboBox_categoria, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 270, 170, 30));

        jButton_Guardar.setFont(new java.awt.Font("Segoe UI Variable", 1, 14)); // NOI18N
        jButton_Guardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/guardar.png"))); // NOI18N
        jButton_Guardar.setText("Guardar");
        jButton_Guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_GuardarActionPerformed(evt);
            }
        });
        getContentPane().add(jButton_Guardar, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 320, 120, 30));

        jLabel_wallpaper.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_wallpaper.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/fondo3.jpg"))); // NOI18N
        jLabel_wallpaper.setText("Codigo");
        getContentPane().add(jLabel_wallpaper, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 390, 370));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton_GuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_GuardarActionPerformed

        modelos.Producto producto = new modelos.Producto();
        DaoProducto controlProducto = new DaoProducto();
        DaoCategoria daoC = new DaoCategoria();
        String categoria = "";
        categoria = jComboBox_categoria.getSelectedItem().toString().trim();
        modelos.Producto p;

        //validar campos
        if (txt_Codigo.getText().equals("") || txt_nombre.getText().equals("") || txt_cantidad.getText().equals("") || txt_precio.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Complete todos los campos");
        } else {
            p=controlProducto.buscarProductoPorCodigo(txt_Codigo.getText().trim());
            if (!controlProducto.existeProducto(txt_Codigo.getText().trim())) {

                if (categoria.equalsIgnoreCase("Seleccione categoria:")) {
                    JOptionPane.showMessageDialog(null, "Seleccione categoria");
                } else {
                    try {
                        producto.setNombre(txt_nombre.getText().trim());
                        producto.setCantidad(Integer.parseInt(txt_cantidad.getText().trim()));
                        producto.setDescripcion(txt_descripcion.getText().trim());
                        String precioTXT = "";
                        double Precio = 0.0;
                        precioTXT = txt_precio.getText().trim();
                        boolean aux = false;
                        /*
                            *Si el usuario ingresa , (coma) como punto decimal,
                            lo transformamos a punto (.)
                         */
                        for (int i = 0; i < precioTXT.length(); i++) {
                            if (precioTXT.charAt(i) == ',') {
                                String precioNuevo = precioTXT.replace(",", ".");
                                Precio = Double.parseDouble(precioNuevo);
                                aux = true;
                            }
                        }
                        //evaluar la condicion
                        if (aux == true) {
                            producto.setPrecio(Precio);
                        } else {
                            Precio = Double.parseDouble(precioTXT);
                            producto.setPrecio(Precio);
                        }

                        //idcategoria - cargar metodo que obtiene el id de categoria
                        daoC.IdCategoria((String) this.jComboBox_categoria.getSelectedItem());
                        producto.setIdCategoria(obtenerIdCategoriaCombo);
                        producto.setCodigo(Integer.parseInt(txt_Codigo.getText().trim()));
                        producto.setEstado(1);
                        producto.setMinimo(Integer.parseInt(txtStock.getText().trim()));

                        if (controlProducto.guardar(producto,(String) this.jComboBox_categoria.getSelectedItem())) {
                            JOptionPane.showMessageDialog(null, "Registro Guardado");
                            jComboBox_categoria = daoC.CargarComboCategorias(jComboBox_categoria);
                            this.Limpiar();
                        } else {
                            JOptionPane.showMessageDialog(null, "Error al Guardar");
                        }

                    } catch (HeadlessException | NumberFormatException e) {
                        System.out.println("Error en: " + e);
                    }
                }
            } else if(p.getEstado()==0){
                    producto.setNombre(txt_nombre.getText().trim());
                    producto.setCantidad(Integer.parseInt(txt_cantidad.getText().trim()));
                    producto.setCodigo(Integer.parseInt(txt_Codigo.getText().trim()));
                    producto.setDescripcion(txt_descripcion.getText().trim());
                    String precioTXT = "";
                    double Precio = 0.0;
                    precioTXT = txt_precio.getText().trim();
                    boolean aux = false;

                    for (int i = 0; i < precioTXT.length(); i++) {
                        if (precioTXT.charAt(i) == ',') {
                            String precioNuevo = precioTXT.replace(",", ".");
                            Precio = Double.parseDouble(precioNuevo);
                            aux = true;
                        }
                    }
                    
                    if (aux == true) {
                        producto.setPrecio(Precio);
                    } else {
                        Precio = Double.parseDouble(precioTXT);
                        producto.setPrecio(Precio);
                    }

                    producto.setDescripcion(txt_descripcion.getText().trim());
                    producto.setIdCategoria(daoC.IdCategoria((String) this.jComboBox_categoria.getSelectedItem()));
                    producto.setEstado(1);

                    if (controlProducto.actualizar(producto, p.getIdProducto())) {
                        JOptionPane.showMessageDialog(null, "Registro Actualizado");
                        jComboBox_categoria = daoC.CargarComboCategorias(jComboBox_categoria);
                        this.Limpiar();
                        this.setVisible(false);
                    } else {
                        JOptionPane.showMessageDialog(null, "Error al Guardar");
                    }
            }else {
                JOptionPane.showMessageDialog(null, "El producto ya existe en la Base de Datos");
            }
        }
    }//GEN-LAST:event_jButton_GuardarActionPerformed

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        // TODO add your handling code here:
        modelos.Producto producto = new modelos.Producto();
        DaoProducto controlProducto = new DaoProducto();
        DaoCategoria daoC = new DaoCategoria();
        String categoria = "";
        categoria = jComboBox_categoria.getSelectedItem().toString().trim();

        //validar campos
        if (txt_Codigo.getText().equals("") || txt_nombre.getText().equals("") || txt_cantidad.getText().equals("") || txt_precio.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Complete todos los campos");
        } else {
            if (categoria.equalsIgnoreCase("Seleccione categoria:")) {
                JOptionPane.showMessageDialog(null, "Seleccione categoria");
            } else {
                try {
                    producto.setNombre(txt_nombre.getText().trim());
                    producto.setCantidad(Integer.parseInt(txt_cantidad.getText().trim()));
                    producto.setCodigo(Integer.parseInt(txt_Codigo.getText().trim()));
                    producto.setDescripcion(txt_descripcion.getText().trim());
                    String precioTXT = "";
                    double Precio = 0.0;
                    precioTXT = txt_precio.getText().trim();
                    boolean aux = false;

                    for (int i = 0; i < precioTXT.length(); i++) {
                        if (precioTXT.charAt(i) == ',') {
                            String precioNuevo = precioTXT.replace(",", ".");
                            Precio = Double.parseDouble(precioNuevo);
                            aux = true;
                        }
                    }
                    
                    if (aux == true) {
                        producto.setPrecio(Precio);
                    } else {
                        Precio = Double.parseDouble(precioTXT);
                        producto.setPrecio(Precio);
                    }

                    producto.setDescripcion(txt_descripcion.getText().trim());
                    producto.setIdCategoria(daoC.IdCategoria((String) this.jComboBox_categoria.getSelectedItem()));
                    producto.setEstado(1);

                    if (controlProducto.actualizar(producto, idProdu)) {
                        JOptionPane.showMessageDialog(null, "Registro Actualizado");
                        jComboBox_categoria = daoC.CargarComboCategorias(jComboBox_categoria);
                        this.Limpiar();
                        this.setVisible(false);
                    } else {
                        JOptionPane.showMessageDialog(null, "Error al Guardar");
                    }

                } catch (HeadlessException | NumberFormatException e) {
                    System.out.println("Error en: " + e);
                }
            }
        }
    }//GEN-LAST:event_btnActualizarActionPerformed

    private void jComboBox_categoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox_categoriaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox_categoriaActionPerformed

    private void txt_descripcionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_descripcionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_descripcionActionPerformed

    private void btn_eliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_eliminarActionPerformed
        // TODO add your handling code here:
        int option = JOptionPane.showConfirmDialog(null, "¿Deseas continuar?", "Confirmar", JOptionPane.YES_NO_OPTION);
        if (option == JOptionPane.YES_OPTION) {
            DaoProducto cli = new DaoProducto();
            if(cli.desactivarProductoPorCodigo(Integer.parseInt(txt_Codigo.getText().trim()))){
                JOptionPane.showMessageDialog(null, "Se elimino correctamente");
            }else
                JOptionPane.showMessageDialog(null, "Error al eliminar");
            this.setVisible(false);
        } else {
            
        }
    }//GEN-LAST:event_btn_eliminarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btn_eliminar;
    private javax.swing.JButton jButton_Guardar;
    private javax.swing.JComboBox<String> jComboBox_categoria;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel_wallpaper;
    private javax.swing.JTextField txtStock;
    private javax.swing.JTextField txt_Codigo;
    private javax.swing.JTextField txt_cantidad;
    private javax.swing.JTextField txt_descripcion;
    private javax.swing.JTextField txt_nombre;
    private javax.swing.JTextField txt_precio;
    // End of variables declaration//GEN-END:variables
     /**
     *
     * Metodo para limpiar campos
     */
    private void Limpiar() {
        txt_nombre.setText("");
        txt_cantidad.setText("");
        txt_precio.setText("");
        txt_descripcion.setText("");
        txt_Codigo.setText("");
        txtStock.setText("");
    }
}
